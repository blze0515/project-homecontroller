<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/dtd/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.bootreact.hmct.mapper.ProductMapper">
	<select id="getMainProductList" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , MIN(B.COMMON_CODE)
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
						group by A.PRODUCT_NO
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE;
	]]>
	</select>
	
	<select id="getMainProductImageList" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
	]]>
	</select>
	
	<select id="getAdminProductList" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
	</select>
	
	
	<select id="getProduct" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , B.COMMON_CODE
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
						  AND A.PRODUCT_NO = #{productNo}
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
	]]>
	</select>
	
	<!-- 제품번호를 넘겨서 이미지 조회(컬러 구분 x) -->
	<select id="getProductImage" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
			WHERE PRODUCT_NO = #{productNo}
	]]>
	</select> 
	
	
	<!-- 제품번호, 커먼코드 둘 다 넘겨서 이미지 조회(컬러 구분 o)-->
	<select id="getProductWithCommonCode" parameterType="Map" resultType="camelHashMap">
	<![CDATA[
		SELECT *
			FROM T_HMCT_PRODUCT_IMAGE
			WHERE PRODUCT_NO = #{productNo}
			AND COMMON_CODE = #{commonCode};
	]]>
	</select>
	
	
	<!-- 제품번호를 이용해서 대표 컬러(커먼코드) 1개 가져오기 -->
	<select id="getRepresentativeCommonCode" parameterType="int" resultType="String">
	<![CDATA[
		select  MIN(COMMON_CODE) as COMMON_CODE
			from t_hmct_product_optn
			where product_no = #{productNo};
	]]>
	</select>
	
	<!-- 컬러(커먼코드)별 대표사진 1개씩 가져오기 -->
	<select id="getRepresentativeImage" parameterType="int" resultType="camelHashMap">
	<![CDATA[
		SELECT * FROM T_HMCT_PRODUCT_IMAGE
			WHERE product_no = #{productNo}
            group by common_code;
	]]>
	</select>
	
	<!-- 컬러/소재/가격별 제품목록 조회 (동적 쿼리 사용) -->
	<select id="getProductListByFilter" parameterType="Map" resultType="camelHashMap">
	<![CDATA[
		SELECT AA.*
			,  BB.COMMON_CODE_NAME AS PRODUCT_MATERIAL_NAME
			,  CC.COMMON_CODE_NAME AS PRODUCT_CATEGORY_NAME
			FROM (
					SELECT A.*
						 , MIN(B.COMMON_CODE)
		                 , B.PRODUCT_INVENTORY
						 , C.COMMON_CODE_NAME
						FROM T_HMCT_PRODUCT A
						   , T_HMCT_PRODUCT_OPTN B
						   , T_HMCT_COMMON C
						WHERE A.PRODUCT_NO = B.PRODUCT_NO
						  AND B.COMMON_CODE = C.COMMON_CODE
						group by A.PRODUCT_NO
				) AA
		        , (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'B' 
				  ) BB
				, (
					SELECT * 
						FROM T_HMCT_COMMON
		                WHERE COMMON_TYPE = 'C' 
				  ) CC
		]]>
		<!-- 카테고리 조건이 있을 때 --> 
		<if test = "#{productCategory} != null"> 
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = #{productCategory};
		</if>
		<!-- 소재 조건이 있을 때 --> 
		<if test = "#{productMaterial} != null">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_MATERIAL = #{productMaterial};
		</if>
		<!-- 가격 조건이 있을 때 --> 
		<if test = "#{producPrice} != null">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice};
		</if>
		<!-- 카테고리, 소재 조건이 있을 때 --> 
		<if test = "(#{producPrice} != null) and (#{producMaterial} != null)">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = #{productCategory} 
		      OR
		     ( AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.AA.PRODUCT_MATERIAL = #{productMaterial});
		</if>
		<!-- 소재, 가격 조건이 있을 때 --> 
		<if test = "(#{producMaterial} != null) and (#{lowestPrice} != null) and (#{highestPrice} != null)">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.AA.PRODUCT_MATERIAL = #{productMaterial}
		      OR
		     ( AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice});
		</if>
		<!-- 카테고리, 가격 조건이 있을 때 --> 
		<if test = "(#{producCategory} != null) and (#{lowestPrice} != null) and (#{highestPrice} != null)">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = #{productCategory} 
		      OR
		     ( AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice});
		</if>
		<!-- 카테고리, 소재, 가격 조건이 있을 때 --> 
		<if test = "#{producCategory} != null) and (#{productMaterial} != null) and(#{lowestPrice} != null) and (#{highestPrice} != null)">
			WHERE AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = #{productCategory} 
		      OR
		     ( AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_MATERIAL = #{productMaterial})
		      OR
		     ( AA.PRODUCT_MATERIAL = BB.COMMON_CODE
		      AND AA.PRODUCT_CATEGORY = CC.COMMON_CODE
		      AND AA.PRODUCT_PRICE BETWEEN #{lowestPrice} and #{highestPrice});
		</if>
		<!-- 아무 조건이 없을 때 -->	
	</select>
	

</mapper>


